spring:
  datasource:
    dynamic:
      druid:
        #监控统计拦截的filter
        filters: stat
        initial-size: 1
        min-idle: 1
        max-active: 20
        #获取连接等待超时时间
        max-wait: 60000
        #间隔多久检查一次，将空闲连接关闭
        time-between-eviction-runs-millis: 60000
        #一个连接在池中的最小生存时间
        min-evictable-idle-time-millis: 300000
        validation-query: SELECT 'X'
        test-while-idle: true
        test-on-borrow: false
        test-on-return: false
        #打开PSCACHE 并指定每个连接上PSCACHE的大小，oracle为true，mysql为false 分库分表较多推荐设置为false
        pool-prepared-statements: false
        max-pool-prepared-statement-per-connection-size: 20
      primary: write #设置默认的数据源或者数据源组,默认值即为master
      strict: true #设置严格模式,默认false不启动. 启动后再为匹配到指定数据源时候回抛出异常,不启动会使用默认数据源.
      datasource:
        write:
          username: root
          password: root
          driver-class-name: com.mysql.cj.jdbc.Driver
          url: jdbc:mysql://192.168.3.33:3306/my_db?characterEncoding=utf8&useSSL=false&autoReconnect=true&failOverReadOnly=false&autoReconnectForPools=true&allowMultiQueries=true&serverTimezone=Hongkong
        read:
          username: root
          password: root
          driver-class-name: com.mysql.cj.jdbc.Driver
          url: jdbc:mysql://192.168.3.33:3307/my_db?characterEncoding=utf8&useSSL=false&autoReconnect=true&failOverReadOnly=false&autoReconnectForPools=true&allowMultiQueries=true&serverTimezone=Hongkong
  redis:
    host: 192.168.3.33
    port: 6379
